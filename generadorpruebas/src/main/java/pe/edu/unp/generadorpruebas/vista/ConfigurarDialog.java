/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pe.edu.unp.generadorpruebas.vista;

import java.awt.HeadlessException;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import pe.edu.unp.generadorpruebas.util.ConfiguracionProperties;
import pe.edu.unp.generadorpruebas.util.Constantes;
import pe.edu.unp.generadorpruebas.util.FolderFileFilter;
import pe.edu.unp.generadorpruebas.util.GeneradorUtil;

/**
 *
 * @author nazaret
 */
public class ConfigurarDialog extends javax.swing.JDialog {

    /**
     * Creates new form ConfigurarDialog
     */
    public ConfigurarDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtDirectorioSalida = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDirectorioEntrada = new javax.swing.JTextField();
        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnSelDirectorioSalida = new javax.swing.JButton();
        btnSelDirectorioEntrada = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Directorio de salida");

        txtDirectorioSalida.setEditable(false);

        jLabel2.setText("Carpeta de trabajo");

        txtDirectorioEntrada.setEditable(false);

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnSelDirectorioSalida.setText("...");
        btnSelDirectorioSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelDirectorioSalidaActionPerformed(evt);
            }
        });

        btnSelDirectorioEntrada.setText("...");
        btnSelDirectorioEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelDirectorioEntradaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDirectorioSalida)
                            .addComponent(txtDirectorioEntrada))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSelDirectorioSalida)
                            .addComponent(btnSelDirectorioEntrada))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 127, Short.MAX_VALUE)
                        .addComponent(btnCancelar)
                        .addGap(18, 18, 18)
                        .addComponent(btnAceptar)
                        .addContainerGap(138, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtDirectorioSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelDirectorioSalida))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDirectorioEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelDirectorioEntrada))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAceptar)
                    .addComponent(btnCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        if (validarDatos() && actualizarDatos()) {
            this.dispose();
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        leerDatosConfiguracion();
    }//GEN-LAST:event_formWindowOpened

    private void btnSelDirectorioSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelDirectorioSalidaActionPerformed
        seleccionarArchivo(txtDirectorioSalida);
    }//GEN-LAST:event_btnSelDirectorioSalidaActionPerformed

    private void btnSelDirectorioEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelDirectorioEntradaActionPerformed
        seleccionarArchivo(txtDirectorioEntrada);
    }//GEN-LAST:event_btnSelDirectorioEntradaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSelDirectorioEntrada;
    private javax.swing.JButton btnSelDirectorioSalida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtDirectorioEntrada;
    private javax.swing.JTextField txtDirectorioSalida;
    // End of variables declaration//GEN-END:variables

    private void leerDatosConfiguracion() {
        ConfiguracionProperties properties = ConfiguracionProperties.getInstance();
        txtDirectorioEntrada.setText(properties.getRutaEntrada());
        txtDirectorioSalida.setText(properties.getRutaSalida());
    }

    private void seleccionarArchivo(JTextField textField) throws HeadlessException {
        JFileChooser chooser;
        int eleccion;
        chooser = new JFileChooser();
        chooser.setFileFilter(new FolderFileFilter());
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        eleccion = chooser.showOpenDialog(this);
        if (eleccion == JFileChooser.APPROVE_OPTION) {
            procesarArchivoSeleccionado(chooser.getSelectedFile(), textField);
        }
    }

    private Boolean validarDatos() {
        String entrada, salida;
        Boolean value;
        entrada = txtDirectorioEntrada.getText();
        value = validarCarpeta(entrada);
        if (!value) {
            return value;
        }
        salida = txtDirectorioSalida.getText();
        return validarCarpeta(salida);
    }

    private Boolean actualizarDatos() {
        ConfiguracionProperties properties = ConfiguracionProperties.getInstance();
        properties.setRutaEntrada(txtDirectorioEntrada.getText());
        properties.setRutaSalida(txtDirectorioSalida.getText());
        Properties props = new Properties();
        try (FileOutputStream out = new FileOutputStream(Constantes.ARCHIVO_PROPERTIES)) {
            props.setProperty(Constantes.PROPIEDAD_CARPETA_ENTRADA, properties.getRutaEntrada());
            props.setProperty(Constantes.PROPIEDAD_CARPETA_SALIDA, properties.getRutaSalida());
            props.store(out, null);
            out.close();
            return Boolean.TRUE;
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex.getMessage());
            return Boolean.FALSE;
        }
    }

    private Boolean validarCarpeta(String entrada) {
        if (!GeneradorUtil.esCadenaValida(entrada)) {
            JOptionPane.showMessageDialog(this, "La ruta de carpeta no puede estar vacia");
            return Boolean.FALSE;
        }
        File carpeta = new File(entrada);
        if (!carpeta.exists()) {
            JOptionPane.showMessageDialog(this, "El archivo seleccionado no existe");
            return Boolean.FALSE;
        }
        if (!carpeta.isDirectory()) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una carpeta de archivos");
            return Boolean.FALSE;
        }
        if (!carpeta.canRead()) {
            JOptionPane.showMessageDialog(this, "La carpeta seleccionada no tiene permisos de lectura");
            return Boolean.FALSE;
        }
        if (!carpeta.canWrite()) {
            JOptionPane.showMessageDialog(this, "La carpeta seleccionada no tiene permisos de escritura");
            return Boolean.FALSE;
        }
        return Boolean.TRUE;
    }

    private void procesarArchivoSeleccionado(File selectedFile, JTextField textField) {
        textField.setText(selectedFile.getAbsolutePath());
    }
}
